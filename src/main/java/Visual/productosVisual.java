package Visual;

import Clases.Productos;
import Clases.ProductosDao;
import static Visual.Bodega.content;
import static Visual.Inventario.content2;
import java.awt.BorderLayout;
import java.awt.Component;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;

/**
 *
 * @author david
 */
public class productosVisual extends javax.swing.JPanel {
    //Declaramos las clases 
    DefaultTableModel modelo = new DefaultTableModel();
    Productos prod = new Productos();
    ProductosDao productos = new ProductosDao();
    
   
    /** Creates new form productosVisual */
    public productosVisual() {
        initComponents();

    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtProductos = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jtBusProd = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jbBuscar = new javax.swing.JButton();
        jbEditarProd = new javax.swing.JButton();
        Cargo = new javax.swing.JLabel();
        jbAgreProdSucu = new javax.swing.JButton();
        jlNUm = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Liberation Sans", 1, 28)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 153));
        jLabel2.setText("Productos");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 20, -1, -1));

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jtProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Categoria", "Precio", "Cantidad", "Descripcion"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtProductos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jtProductos.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(jtProductos);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 750, 370));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 790, 400));

        jPanel2.setBackground(new java.awt.Color(153, 204, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jtBusProd.setBackground(new java.awt.Color(153, 204, 255));
        jtBusProd.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jtBusProd.setForeground(new java.awt.Color(0, 0, 0));
        jtBusProd.setBorder(null);
        jPanel2.add(jtBusProd, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 330, 30));

        jSeparator1.setBackground(new java.awt.Color(153, 204, 255));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        jPanel2.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 340, 10));

        jbBuscar.setBackground(new java.awt.Color(0, 0, 102));
        jbBuscar.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jbBuscar.setForeground(new java.awt.Color(255, 255, 255));
        jbBuscar.setText("Buscar");
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });
        jPanel2.add(jbBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 10, -1, 30));

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 80, 480, 50));

        jbEditarProd.setBackground(new java.awt.Color(0, 51, 255));
        jbEditarProd.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        jbEditarProd.setForeground(new java.awt.Color(255, 255, 255));
        jbEditarProd.setText("Editar");
        jbEditarProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditarProdActionPerformed(evt);
            }
        });
        add(jbEditarProd, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 80, 30));

        Cargo.setBackground(new java.awt.Color(255, 255, 255));
        Cargo.setForeground(new java.awt.Color(255, 255, 255));
        Cargo.setText("Cargo");
        add(Cargo, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 110, -1));

        jbAgreProdSucu.setBackground(new java.awt.Color(0, 51, 255));
        jbAgreProdSucu.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        jbAgreProdSucu.setForeground(new java.awt.Color(255, 255, 255));
        jbAgreProdSucu.setText("Agregar");
        jbAgreProdSucu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAgreProdSucuActionPerformed(evt);
            }
        });
        add(jbAgreProdSucu, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 90, 100, 30));

        jlNUm.setForeground(new java.awt.Color(255, 255, 255));
        jlNUm.setText("Num");
        add(jlNUm, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 70, -1));
    }// </editor-fold>//GEN-END:initComponents
// Codigo para Editar la informacion de un producto en especifico
    private void jbEditarProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditarProdActionPerformed
        
    String cargo = Cargo.getText();
        
    if(cargo.equals("inventario")){
//Llamamos al metodo para poder editar como inventario        
    ProdInvEditVisual p6 = new ProdInvEditVisual();
    p6.setSize(920, 650);
    p6.setLocation(0,0);
    
        int seleccionar = jtProductos.getSelectedRow();
        if (seleccionar >= 0) {
            Object[] filaselect = {
            jtProductos.getValueAt(seleccionar, 0)
        };
        p6.txtCodProd.setText(String.valueOf(filaselect[0]));
        
        String cod = p6.txtCodProd.getText();
        prod = productos.BuscarPro(cod);
        
                    p6.jtNombre.setText(""+ prod.getNombreProd());
                    p6.txtDescripcion.setText(""+ prod.getDescripcion());
                    p6.ap1.setText(prod.getCategoria());
                    p6.txtdinero.setText(""+prod.getPrecio());
                    
       prod = productos.BuscarPInv(cod);
                    p6.txtPrecio.setText(""+prod.getCantidad());
                    p6.jLabel5.setText(""+prod.getCantidad());
                    p6.txtSucursal.setText(""+ prod.getSucurorigin());
                    p6.jDateChooser1.setDate(prod.getFecha());
       

    }
     content2.removeAll();
     content2.add(p6, BorderLayout.CENTER);
     content2.revalidate();
     content2.repaint(); 
    }else{
//Llamamos al metodo para poder editar como bodega    
    productosEditVisual p6 = new productosEditVisual();
    p6.setSize(920, 650);
    p6.setLocation(0,0);
    
        int seleccionar = jtProductos.getSelectedRow();
        if (seleccionar >= 0) {
            Object[] filaselect = {
            jtProductos.getValueAt(seleccionar, 0)
        };
        p6.txtCodProd.setText(String.valueOf(filaselect[0]));
        
        String cod = p6.txtCodProd.getText();
        prod = productos.BuscarPro(cod);
        
                    p6.jtNombre.setText(""+ prod.getNombreProd());
                    p6.txtDescripcion.setText(""+ prod.getDescripcion());
                    p6.jcCategoria.setSelectedItem(String.valueOf(prod.getCategoria()));
                    p6.txtPrecio.setText(""+prod.getStock());
                    p6.txtdinero.setText(""+prod.getPrecio());

    }
     content.removeAll();
     content.add(p6, BorderLayout.CENTER);
     content.revalidate();
     content.repaint(); 
    }            
    }//GEN-LAST:event_jbEditarProdActionPerformed

// Codigo para realizar busquedas dentro de la tabla de productos    
    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        // TODO add your handling code here:
        String cargo = Cargo.getText();
//If de comparacion para ver que cargo tiene y as√≠ segun su cargo poder iniciar con las ventas        
    if(cargo.equals("inventario")){
        limpTable();
            int numero = Integer.valueOf(jlNUm.getText());
            String buscUser = jtBusProd.getText();
              List<Productos> ListarCli = productos.BusProdVen(buscUser, numero);
              modelo = (DefaultTableModel) jtProductos.getModel();
              Object[] ob = new Object[8];
              for (int i = 0; i < ListarCli.size(); i++) {
                  ob[0] = ListarCli.get(i).getIdProd();
                  ob[1] = ListarCli.get(i).getNombreProd();
                  ob[2] = ListarCli.get(i).getCategoria();
                  ob[3] = ListarCli.get(i).getPrecio();
                  ob[4] = ListarCli.get(i).getCantidad();
                  ob[5] = ListarCli.get(i).getDescripcion();
                  modelo.addRow(ob);
              }
              jtProductos.setModel(modelo);
        
    }else if(cargo.equals("vendedor")){
        limpTable();
                int numero = Integer.valueOf(jlNUm.getText());
      String buscUser = jtBusProd.getText();
        List<Productos> ListarCli = productos.BusProdVen(buscUser, numero);
        modelo = (DefaultTableModel) jtProductos.getModel();
        Object[] ob = new Object[8];
        for (int i = 0; i < ListarCli.size(); i++) {
            ob[0] = ListarCli.get(i).getIdProd();
            ob[1] = ListarCli.get(i).getNombreProd();
            ob[2] = ListarCli.get(i).getCategoria();
            ob[3] = ListarCli.get(i).getPrecio();
            ob[4] = ListarCli.get(i).getCantidad();
            ob[5] = ListarCli.get(i).getDescripcion();
            modelo.addRow(ob);
        }
        jtProductos.setModel(modelo);
    }else{
        String search = jtBusProd.getText();
        limpTable();
        List<Productos> ListarProdu = productos.BuscProd(search);
        modelo = (DefaultTableModel) jtProductos.getModel();
        Object[] ob = new Object[11];
        for (int i = 0; i < ListarProdu.size(); i++) {
            ob[0] = ListarProdu.get(i).getIdProd();
            ob[1] = ListarProdu.get(i).getNombreProd();
            ob[2] = ListarProdu.get(i).getCategoria();
            ob[3] = ListarProdu.get(i).getPrecio();
            ob[4] = ListarProdu.get(i).getStock();
            ob[5] = ListarProdu.get(i).getDescripcion();
            modelo.addRow(ob);
        }
        jtProductos.setModel(modelo);
     }       
    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jbAgreProdSucuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAgreProdSucuActionPerformed
        // TODO add your handling code here:
            String cargo = Cargo.getText();
//If de comparacion para ver que cargo tiene y as√≠ poder mostrar el panel de ingresos de productos        
    if(cargo.equals("bodega")){
    ProdSucuBod p6 = new ProdSucuBod();
    p6.setSize(920, 650);
    p6.setLocation(0,0);
    
        int seleccionar = jtProductos.getSelectedRow();
        if (seleccionar >= 0) {
            Object[] filaselect = {
            jtProductos.getValueAt(seleccionar, 0)
        };
        p6.txtCodProd.setText(String.valueOf(filaselect[0]));
        
        String cod = p6.txtCodProd.getText();
        prod = productos.BuscarPro(cod);
        
                    p6.jtNombre.setText(""+ prod.getNombreProd());
                    p6.txtDescripcion.setText(""+ prod.getDescripcion());
                    p6.ap1.setText(prod.getCategoria());
                    p6.txtdinero.setText(""+prod.getPrecio());
                    
                    prod = productos.BuscarPInv(cod);
                    p6.txtPrecio.setText(""+prod.getCantidad());
                    p6.jLabel5.setText(""+prod.getCantidad());
                    p6.jComboBox1.setSelectedItem(String.valueOf(prod.getSucurorigin()));
                    p6.jDateChooser1.setDate(prod.getFecha());
       

    }
     content.removeAll();
     content.add(p6, BorderLayout.CENTER);
     content.revalidate();
     content.repaint(); 
    }else{
        
    }
    }//GEN-LAST:event_jbAgreProdSucuActionPerformed

//Metodo para limpiar el Jtable de productos
    public void limpTable(){
    DefaultTableModel temp = (DefaultTableModel) jtProductos.getModel();
    int filas = jtProductos.getRowCount();

    for (int a = 0; filas > a; a++) {
        temp.removeRow(0);
    }
}    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel Cargo;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    public javax.swing.JButton jbAgreProdSucu;
    private javax.swing.JButton jbBuscar;
    public javax.swing.JButton jbEditarProd;
    public javax.swing.JLabel jlNUm;
    private javax.swing.JTextField jtBusProd;
    public javax.swing.JTable jtProductos;
    // End of variables declaration//GEN-END:variables

}
